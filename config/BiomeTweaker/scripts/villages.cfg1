all = forAllBiomes()

birchPlank = forBlock("minecraft:planks")
birchPlank.setProperty("variant", "birch")
birchLog = forBlock("minecraft:log")
birchLog.setProperty("variant", "birch")
oakStairN = forBlock("minecraft:oak_stairs")
oakStairN.setProperty("facing", "north")
oakStairS = forBlock("minecraft:oak_stairs")
oakStairS.setProperty("facing", "south")
oakStairE = forBlock("minecraft:oak_stairs")
oakStairE.setProperty("facing", "east")
oakStairW = forBlock("minecraft:oak_stairs")
oakStairW.setProperty("facing", "west")
birchStairN = forBlock("minecraft:birch_stairs")
birchStairN.setProperty("facing", "north")
birchStairS = forBlock("minecraft:birch_stairs")
birchStairS.setProperty("facing", "south")
birchStairE = forBlock("minecraft:birch_stairs")
birchStairE.setProperty("facing", "east")
birchStairW = forBlock("minecraft:birch_stairs")
birchStairW.setProperty("facing", "west")
birchforest = forBiomes("minecraft:birch_forest")
birchforest.registerGenVillageBlockRep(oakStairN, birchStairN)
birchforest.registerGenVillageBlockRep(oakStairS, birchStairS)
birchforest.registerGenVillageBlockRep(oakStairE, birchStairE)
birchforest.registerGenVillageBlockRep(oakStairW, birchStairW)
birchforest.registerGenVillageBlockRep("minecraft:log", birchLog)
birchforest.registerGenVillageBlockRep("minecraft:planks", birchPlank)
birchforest.registerGenVillageBlockRep("minecraft:fence", "minecraft:birch_fence")
birchforest.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:birch_door")

Beach = forBiomes("minecraft:beaches")
Beach.set("genVillages", true)
palmPlank = forBlock("biomesoplenty:planks_0")
palmPlank.setProperty("variant", "palm")
palmLog = forBlock("biomesoplenty:log_1")
palmLog.setProperty("variant", "palm")
palmStairN = forBlock("biomesoplenty:palm_stairs")
palmStairN.setProperty("facing", "north")
palmStairS = forBlock("biomesoplenty:palm_stairs")
palmStairS.setProperty("facing", "south")
palmStairE = forBlock("biomesoplenty:palm_stairs")
palmStairE.setProperty("facing", "east")
palmStairW = forBlock("biomesoplenty:palm_stairs")
palmStairW.setProperty("facing", "west")
Beach.registerGenVillageBlockRep(oakStairN, palmStairN)
Beach.registerGenVillageBlockRep(oakStairS, palmStairS)
Beach.registerGenVillageBlockRep(oakStairE, palmStairE)
Beach.registerGenVillageBlockRep(oakStairW, palmStairW)
Beach.registerGenVillageBlockRep("minecraft:log", palmLog)
Beach.registerGenVillageBlockRep("minecraft:planks", palmPlank)
Beach.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:palm_fence")
Beach.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:palm_door_block")

birchforesthills = forBiomes("minecraft:birch_forest_hills")
birchforesthills.registerGenVillageBlockRep(oakStairN, birchStairN)
birchforesthills.registerGenVillageBlockRep(oakStairS, birchStairS)
birchforesthills.registerGenVillageBlockRep(oakStairE, birchStairE)
birchforesthills.registerGenVillageBlockRep(oakStairW, birchStairW)
birchforesthills.registerGenVillageBlockRep("minecraft:log", birchLog)
birchforesthills.registerGenVillageBlockRep("minecraft:planks", birchPlank)
birchforesthills.registerGenVillageBlockRep("minecraft:fence", "minecraft:birch_fence")
birchforesthills.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:birch_door")

taiga = forBiomes("minecraft:taiga")
sprucePlank = forBlock("minecraft:planks")
sprucePlank.setProperty("variant", "spruce")
spruceLog = forBlock("minecraft:log")
spruceLog.setProperty("variant", "spruce")
spruceStairN = forBlock("minecraft:spruce_stairs")
spruceStairN.setProperty("facing", "north")
spruceStairS = forBlock("minecraft:spruce_stairs")
spruceStairS.setProperty("facing", "south")
spruceStairE = forBlock("minecraft:spruce_stairs")
spruceStairE.setProperty("facing", "east")
spruceStairW = forBlock("minecraft:spruce_stairs")
spruceStairW.setProperty("facing", "west")
taiga.registerGenVillageBlockRep(oakStairN, spruceStairN)
taiga.registerGenVillageBlockRep(oakStairS, spruceStairS)
taiga.registerGenVillageBlockRep(oakStairE, spruceStairE)
taiga.registerGenVillageBlockRep(oakStairW, spruceStairW)
taiga.registerGenVillageBlockRep("minecraft:log", spruceLog)
taiga.registerGenVillageBlockRep("minecraft:planks", sprucePlank)
taiga.registerGenVillageBlockRep("minecraft:fence", "minecraft:spruce_fence")
taiga.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:spruce_door")

redwoodPlank = forBlock("biomesoplenty:planks_0")
redwoodPlank.setProperty("variant", "redwood")
redwoodLog = forBlock("biomesoplenty:log_2")
redwoodLog.setProperty("variant", "redwood")
redwoodStairN = forBlock("biomesoplenty:redwood_stairs")
redwoodStairN.setProperty("facing", "north")
redwoodStairS = forBlock("biomesoplenty:redwood_stairs")
redwoodStairS.setProperty("facing", "south")
redwoodStairE = forBlock("biomesoplenty:redwood_stairs")
redwoodStairE.setProperty("facing", "east")
redwoodStairW = forBlock("biomesoplenty:redwood_stairs")
redwoodStairW.setProperty("facing", "west")
redwoodforest = forBiomes("biomesoplenty:redwood_forest")
redwoodforest.registerGenVillageBlockRep("minecraft:oak_stairs", "biomesoplenty:redwood_stairs")
redwoodforest.registerGenVillageBlockRep(oakStairN, redwoodStairN)
redwoodforest.registerGenVillageBlockRep(oakStairS, redwoodStairS)
redwoodforest.registerGenVillageBlockRep(oakStairE, redwoodStairE)
redwoodforest.registerGenVillageBlockRep(oakStairW, redwoodStairW)
redwoodforest.registerGenVillageBlockRep("minecraft:log", redwoodLog)
redwoodforest.registerGenVillageBlockRep("minecraft:planks", redwoodPlank)
redwoodforest.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:redwood_fence")
redwoodforest.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:redwood_door_block")

redwoodforestedge = forBiomes("biomesoplenty:redwood_forest_edge")
redwoodforestedge.registerGenVillageBlockRep("minecraft:oak_stairs", "biomesoplenty:redwood_stairs")
redwoodforestedge.registerGenVillageBlockRep(oakStairN, redwoodStairN)
redwoodforestedge.registerGenVillageBlockRep(oakStairS, redwoodStairS)
redwoodforestedge.registerGenVillageBlockRep(oakStairE, redwoodStairE)
redwoodforestedge.registerGenVillageBlockRep(oakStairW, redwoodStairW)
redwoodforestedge.registerGenVillageBlockRep("minecraft:log", redwoodLog)
redwoodforestedge.registerGenVillageBlockRep("minecraft:planks", redwoodPlank)
redwoodforestedge.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:redwood_fence")
redwoodforestedge.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:redwood_door_block")

jungle = forBiomes("minecraft:jungle")
junglePlank = forBlock("minecraft:planks")
junglePlank.setProperty("variant", "jungle")
jungleLog = forBlock("minecraft:log")
jungleLog.setProperty("variant", "jungle")
jungleStairN = forBlock("minecraft:jungle_stairs")
jungleStairN.setProperty("facing", "north")
jungleStairS = forBlock("minecraft:jungle_stairs")
jungleStairS.setProperty("facing", "south")
jungleStairE = forBlock("minecraft:jungle_stairs")
jungleStairE.setProperty("facing", "east")
jungleStairW = forBlock("minecraft:jungle_stairs")
jungleStairW.setProperty("facing", "west")
jungle.registerGenVillageBlockRep(oakStairN, jungleStairN)
jungle.registerGenVillageBlockRep(oakStairS, jungleStairS)
jungle.registerGenVillageBlockRep(oakStairE, jungleStairE)
jungle.registerGenVillageBlockRep(oakStairW, jungleStairW)
jungle.registerGenVillageBlockRep("minecraft:log", jungleLog)
jungle.registerGenVillageBlockRep("minecraft:planks", junglePlank)
jungle.registerGenVillageBlockRep("minecraft:fence", "minecraft:jungle_fence")
jungle.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:jungle_door")

junglehills = forBiomes("minecraft:jungle_hills")
junglehills.registerGenVillageBlockRep(oakStairN, jungleStairN)
junglehills.registerGenVillageBlockRep(oakStairS, jungleStairS)
junglehills.registerGenVillageBlockRep(oakStairE, jungleStairE)
junglehills.registerGenVillageBlockRep(oakStairW, jungleStairW)
junglehills.registerGenVillageBlockRep("minecraft:log", jungleLog)
junglehills.registerGenVillageBlockRep("minecraft:planks", junglePlank)
junglehills.registerGenVillageBlockRep("minecraft:fence", "minecraft:jungle_fence")
junglehills.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:jungle_door")

jungleedge = forBiomes("minecraft:jungle_edge")
jungleedge.registerGenVillageBlockRep(oakStairN, jungleStairN)
jungleedge.registerGenVillageBlockRep(oakStairS, jungleStairS)
jungleedge.registerGenVillageBlockRep(oakStairE, jungleStairE)
jungleedge.registerGenVillageBlockRep(oakStairW, jungleStairW)
jungleedge.registerGenVillageBlockRep("minecraft:log", jungleLog)
jungleedge.registerGenVillageBlockRep("minecraft:planks", junglePlank)
jungleedge.registerGenVillageBlockRep("minecraft:fence", "minecraft:jungle_fence")
jungleedge.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:jungle_door")

willow = forBiomes("biomesoplenty:bayou")
willowPlank = forBlock("biomesoplenty:planks_0")
willowPlank.setProperty("variant", "willow")
willowLog = forBlock("biomesoplenty:log_2")
willowLog.setProperty("variant", "willow")
willowStairN = forBlock("biomesoplenty:willow_stairs")
willowStairN.setProperty("facing", "north")
willowStairS = forBlock("biomesoplenty:willow_stairs")
willowStairS.setProperty("facing", "south")
willowStairE = forBlock("biomesoplenty:willow_stairs")
willowStairE.setProperty("facing", "east")
willowStairW = forBlock("biomesoplenty:willow_stairs")
willowStairW.setProperty("facing", "west")
willow.registerGenVillageBlockRep(oakStairN, willowStairN)
willow.registerGenVillageBlockRep(oakStairS, willowStairS)
willow.registerGenVillageBlockRep(oakStairE, willowStairE)
willow.registerGenVillageBlockRep(oakStairW, willowStairW)
willow.registerGenVillageBlockRep("minecraft:log", willowLog)
willow.registerGenVillageBlockRep("minecraft:planks", willowPlank)
willow.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:willow_fence")
willow.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:willow_door_block")

roofedforest = forBiomes("minecraft:roofed_forest")
darkoakPlank = forBlock("minecraft:planks")
darkoakPlank.setProperty("variant", "dark_oak")
darkoakLog = forBlock("minecraft:log2")
darkoakLog.setProperty("variant", "dark_oak")
darkoakStairN = forBlock("minecraft:dark_oak_stairs")
darkoakStairN.setProperty("facing", "north")
darkoakStairS = forBlock("minecraft:dark_oak_stairs")
darkoakStairS.setProperty("facing", "south")
darkoakStairE = forBlock("minecraft:dark_oak_stairs")
darkoakStairE.setProperty("facing", "east")
darkoakStairW = forBlock("minecraft:dark_oak_stairs")
darkoakStairW.setProperty("facing", "west")
roofedforest.registerGenVillageBlockRep(oakStairN, darkoakStairN)
roofedforest.registerGenVillageBlockRep(oakStairS, darkoakStairS)
roofedforest.registerGenVillageBlockRep(oakStairE, darkoakStairE)
roofedforest.registerGenVillageBlockRep(oakStairW, darkoakStairW)
roofedforest.registerGenVillageBlockRep("minecraft:log", darkoakLog)
roofedforest.registerGenVillageBlockRep("minecraft:planks", darkoakPlank)
roofedforest.registerGenVillageBlockRep("minecraft:fence", "minecraft:dark_oak_fence")
roofedforest.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:dark_oak_door")

cherry = forBiomes("biomesoplenty:cherry_blossom_grove")
cherry.set("genVillages", true)
cherryPlank = forBlock("biomesoplenty:planks_0")
cherryPlank.setProperty("variant", "cherry")
cherryLog = forBlock("biomesoplenty:log_0")
cherryLog.setProperty("variant", "cherry")
cherryStairN = forBlock("biomesoplenty:cherry_stairs")
cherryStairN.setProperty("facing", "north")
cherryStairS = forBlock("biomesoplenty:cherry_stairs")
cherryStairS.setProperty("facing", "south")
cherryStairE = forBlock("biomesoplenty:cherry_stairs")
cherryStairE.setProperty("facing", "east")
cherryStairW = forBlock("biomesoplenty:cherry_stairs")
cherryStairW.setProperty("facing", "west")
cherry.registerGenVillageBlockRep(oakStairN, cherryStairN)
cherry.registerGenVillageBlockRep(oakStairS, cherryStairS)
cherry.registerGenVillageBlockRep(oakStairE, cherryStairE)
cherry.registerGenVillageBlockRep(oakStairW, cherryStairW)
cherry.registerGenVillageBlockRep("minecraft:log", cherryLog)
cherry.registerGenVillageBlockRep("minecraft:planks", cherryPlank)
cherry.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:cherry_fence")
cherry.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:cherry_door_block")

fir = forBiomes("biomesoplenty:coniferous_forest")
fir.set("genVillages", true)
firPlank = forBlock("biomesoplenty:planks_0")
firPlank.setProperty("variant", "fir")
firLog = forBlock("biomesoplenty:log_0")
firLog.setProperty("variant", "fir")
firStairN = forBlock("biomesoplenty:fir_stairs")
firStairN.setProperty("facing", "north")
firStairS = forBlock("biomesoplenty:fir_stairs")
firStairS.setProperty("facing", "south")
firStairE = forBlock("biomesoplenty:fir_stairs")
firStairE.setProperty("facing", "east")
firStairW = forBlock("biomesoplenty:fir_stairs")
firStairW.setProperty("facing", "west")
fir.registerGenVillageBlockRep(oakStairN, firStairN)
fir.registerGenVillageBlockRep(oakStairS, firStairS)
fir.registerGenVillageBlockRep(oakStairE, firStairE)
fir.registerGenVillageBlockRep(oakStairW, firStairW)
fir.registerGenVillageBlockRep("minecraft:log", firLog)
fir.registerGenVillageBlockRep("minecraft:planks", firPlank)
fir.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:fir_fence")
fir.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:fir_door_block")

crag = forBiomes("biomesoplenty:crag")
crag.set("genVillages", false)

eucalyptus = forBiomes("biomesoplenty:eucalyptus_forest")
eucalyptus.set("genVillages", true)
eucalyptusPlank = forBlock("biomesoplenty:planks_0")
eucalyptusPlank.setProperty("variant", "eucalyptus")
eucalyptusLog = forBlock("biomesoplenty:log_3")
eucalyptusLog.setProperty("variant", "eucalyptus")
eucalyptusStairN = forBlock("biomesoplenty:eucalyptus_stairs")
eucalyptusStairN.setProperty("facing", "north")
eucalyptusStairS = forBlock("biomesoplenty:eucalyptus_stairs")
eucalyptusStairS.setProperty("facing", "south")
eucalyptusStairE = forBlock("biomesoplenty:eucalyptus_stairs")
eucalyptusStairE.setProperty("facing", "east")
eucalyptusStairW = forBlock("biomesoplenty:eucalyptus_stairs")
eucalyptusStairW.setProperty("facing", "west")
eucalyptus.registerGenVillageBlockRep(oakStairN, eucalyptusStairN)
eucalyptus.registerGenVillageBlockRep(oakStairS, eucalyptusStairS)
eucalyptus.registerGenVillageBlockRep(oakStairE, eucalyptusStairE)
eucalyptus.registerGenVillageBlockRep(oakStairW, eucalyptusStairW)
eucalyptus.registerGenVillageBlockRep("minecraft:log", eucalyptusLog)
eucalyptus.registerGenVillageBlockRep("minecraft:planks", eucalyptusPlank)
eucalyptus.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:eucalyptus_fence")
eucalyptus.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:eucalyptus_door_block")

fen = forBiomes("biomesoplenty:fen")
fen.set("genVillages", true)
fen.registerGenVillageBlockRep(oakStairN, darkoakStairN)
fen.registerGenVillageBlockRep(oakStairS, darkoakStairS)
fen.registerGenVillageBlockRep(oakStairE, darkoakStairE)
fen.registerGenVillageBlockRep(oakStairW, darkoakStairW)
fen.registerGenVillageBlockRep("minecraft:log", darkoakLog)
fen.registerGenVillageBlockRep("minecraft:planks", darkoakPlank)
fen.registerGenVillageBlockRep("minecraft:fence", "minecraft:dark_oak_fence")
fen.registerGenVillageBlockRep("minecraft:wooden_door", "minecraft:dark_oak_door")

mangrove = forBiomes("biomesoplenty:mangrove")
mangrove.set("genVillages", true)
mangrovePlank = forBlock("biomesoplenty:planks_0")
mangrovePlank.setProperty("variant", "mangrove")
mangroveLog = forBlock("biomesoplenty:log_1")
mangroveLog.setProperty("variant", "mangrove")
mangroveStairN = forBlock("biomesoplenty:mangrove_stairs")
mangroveStairN.setProperty("facing", "north")
mangroveStairS = forBlock("biomesoplenty:mangrove_stairs")
mangroveStairS.setProperty("facing", "south")
mangroveStairE = forBlock("biomesoplenty:mangrove_stairs")
mangroveStairE.setProperty("facing", "east")
mangroveStairW = forBlock("biomesoplenty:mangrove_stairs")
mangroveStairW.setProperty("facing", "west")
mangrove.registerGenVillageBlockRep(oakStairN, mangroveStairN)
mangrove.registerGenVillageBlockRep(oakStairS, mangroveStairS)
mangrove.registerGenVillageBlockRep(oakStairE, mangroveStairE)
mangrove.registerGenVillageBlockRep(oakStairW, mangroveStairW)
mangrove.registerGenVillageBlockRep("minecraft:log", mangroveLog)
mangrove.registerGenVillageBlockRep("minecraft:planks", mangrovePlank)
mangrove.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:mangrove_fence")
mangrove.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:mangrove_door_block")

ebony = forBiomes("biomesoplenty:brushland")
ebony.set("genVillages", true)
ebonyPlank = forBlock("biomesoplenty:planks_0")
ebonyPlank.setProperty("variant", "ebony")
ebonyLog = forBlock("biomesoplenty:log_1")
ebonyLog.setProperty("variant", "ebony")
ebonyStairN = forBlock("biomesoplenty:ebony_stairs")
ebonyStairN.setProperty("facing", "north")
ebonyStairS = forBlock("biomesoplenty:ebony_stairs")
ebonyStairS.setProperty("facing", "south")
ebonyStairE = forBlock("biomesoplenty:ebony_stairs")
ebonyStairE.setProperty("facing", "east")
ebonyStairW = forBlock("biomesoplenty:ebony_stairs")
ebonyStairW.setProperty("facing", "west")
ebony.registerGenVillageBlockRep(oakStairN, ebonyStairN)
ebony.registerGenVillageBlockRep(oakStairS, ebonyStairS)
ebony.registerGenVillageBlockRep(oakStairE, ebonyStairE)
ebony.registerGenVillageBlockRep(oakStairW, ebonyStairW)
ebony.registerGenVillageBlockRep("minecraft:log", ebonyLog)
ebony.registerGenVillageBlockRep("minecraft:planks", ebonyPlank)
ebony.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:ebony_fence")
ebony.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:ebony_door_block")

blackkauri = forBiomes("biomesoplenty:chaparral")
blackkauri.set("genVillages", true)
blackkauriPlank = forBlock("plants2:planks")
blackkauriPlank.setProperty("type", "black_kauri")
blackkauriLog = forBlock("plants2:log_0")
blackkauriLog.setProperty("type", "black_kauri")
blackkauriStairN = forBlock("plants2:black_kauri_stairs")
blackkauriStairN.setProperty("facing", "north")
blackkauriStairS = forBlock("plants2:black_kauri_stairs")
blackkauriStairS.setProperty("facing", "south")
blackkauriStairE = forBlock("plants2:black_kauri_stairs")
blackkauriStairE.setProperty("facing", "east")
blackkauriStairW = forBlock("plants2:black_kauri_stairs")
blackkauriStairW.setProperty("facing", "west")
blackkauri.registerGenVillageBlockRep(oakStairN, blackkauriStairN)
blackkauri.registerGenVillageBlockRep(oakStairS, blackkauriStairS)
blackkauri.registerGenVillageBlockRep(oakStairE, blackkauriStairE)
blackkauri.registerGenVillageBlockRep(oakStairW, blackkauriStairW)
blackkauri.registerGenVillageBlockRep("minecraft:log", blackkauriLog)
blackkauri.registerGenVillageBlockRep("minecraft:planks", blackkauriPlank)
#blackkauri.registerGenVillageBlockRep("minecraft:fence", "additions:blocks-blackkaurifence")
#blackkauri.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:blackkauri_door_block")

brazillianpine = forBiomes("minecraft:mutated_savanna")
brazillianpine.set("genVillages", true)
brazillianpinePlank = forBlock("plants2:planks")
brazillianpinePlank.setProperty("type", "brazillian_pine")
brazillianpineLog = forBlock("plants2:log_0")
brazillianpineLog.setProperty("type", "brazillian_pine")
brazillianpineStairN = forBlock("plants2:brazillian_pine_stairs")
brazillianpineStairN.setProperty("facing", "north")
brazillianpineStairS = forBlock("plants2:brazillian_pine_stairs")
brazillianpineStairS.setProperty("facing", "south")
brazillianpineStairE = forBlock("plants2:brazillian_pine_stairs")
brazillianpineStairE.setProperty("facing", "east")
brazillianpineStairW = forBlock("plants2:brazillian_pine_stairs")
brazillianpineStairW.setProperty("facing", "west")
brazillianpine.registerGenVillageBlockRep(oakStairN, brazillianpineStairN)
brazillianpine.registerGenVillageBlockRep(oakStairS, brazillianpineStairS)
brazillianpine.registerGenVillageBlockRep(oakStairE, brazillianpineStairE)
brazillianpine.registerGenVillageBlockRep(oakStairW, brazillianpineStairW)
brazillianpine.registerGenVillageBlockRep("minecraft:log", brazillianpineLog)
brazillianpine.registerGenVillageBlockRep("minecraft:planks", brazillianpinePlank)
brazillianpine.registerGenVillageBlockRep("minecraft:acacia_fence", "additions:blocks-brazillianpinefence")
#brazillianpine.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:brazillianpine_door_block")

desert = forBiomes("minecraft:desert")
desert.registerGenVillageBlockRep("minecraft:fence", "futuremc:sandstone_wall")

deserthills = forBiomes("minecraft:desert_hills")
deserthills.registerGenVillageBlockRep("minecraft:fence", "futuremc:sandstone_wall")

mutateddesert = forBiomes("minecraft:mutated_desert")
mutateddesert.registerGenVillageBlockRep("minecraft:fence", "futuremc:sandstone_wall")

mountainfoothills = forBiomes("biomesoplenty:mountain_foothills")
mountainfoothills.set("genVillages", true)
pinePlank = forBlock("biomesoplenty:planks_0")
pinePlank.setProperty("variant", "pine")
pineLog = forBlock("biomesoplenty:log_2")
pineLog.setProperty("variant", "pine")
pineStairN = forBlock("biomesoplenty:pine_stairs")
pineStairN.setProperty("facing", "north")
pineStairS = forBlock("biomesoplenty:pine_stairs")
pineStairS.setProperty("facing", "south")
pineStairE = forBlock("biomesoplenty:pine_stairs")
pineStairE.setProperty("facing", "east")
pineStairW = forBlock("biomesoplenty:pine_stairs")
pineStairW.setProperty("facing", "west")
mountainfoothills.registerGenVillageBlockRep(oakStairN, pineStairN)
mountainfoothills.registerGenVillageBlockRep(oakStairS, pineStairS)
mountainfoothills.registerGenVillageBlockRep(oakStairE, pineStairE)
mountainfoothills.registerGenVillageBlockRep(oakStairW, pineStairW)
mountainfoothills.registerGenVillageBlockRep("minecraft:log", pineLog)
mountainfoothills.registerGenVillageBlockRep("minecraft:planks", pinePlank)
mountainfoothills.registerGenVillageBlockRep("minecraft:fence", "biomesoplenty:pine_fence")
mountainfoothills.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:pine_door_block")


#baobab = forBiomes("minecraft:savanna_rock")
#baobabPlank = forBlock("pvj:planks_baobab")
#baobabLog = forBlock("pvj:log_baobab")
#baobabStairN = forBlock("plants2:baobab_stair")
#baobabStairN.setProperty("facing", "north")
#baobabStairS = forBlock("plants2:baobab_stair")
#baobabStairS.setProperty("facing", "south")
#baobabStairE = forBlock("plants2:baobab_stair")
#baobabStairE.setProperty("facing", "east")
#baobabStairW = forBlock("plants2:baobab_stair")
#baobabStairW.setProperty("facing", "west")
#baobab.registerGenVillageBlockRep(oakStairN, baobabStairN)
#baobab.registerGenVillageBlockRep(oakStairS, baobabStairS)
#baobab.registerGenVillageBlockRep(oakStairE, baobabStairE)
#baobab.registerGenVillageBlockRep(oakStairW, baobabStairW)
#baobab.registerGenVillageBlockRep("minecraft:log", baobabLog)
#baobab.registerGenVillageBlockRep("minecraft:planks", baobabPlank)
#baobab.registerGenVillageBlockRep("minecraft:fence", "plants2:baobab_fence")
#baobab.registerGenVillageBlockRep("minecraft:wooden_door", "pvj:baobab_door")

#cedar = forBiomes("biometweaker:cedarforest")
#cedar.set("genVillages", true)
#cedarPlank = forBlock("plants2:planks")
#cedarPlank.setProperty("variant", "incense_cedar")
#cedarLog = forBlock("plants2:log_0")
#cedarLog.setProperty("variant", "incense_cedar")
#cedarStairN = forBlock("plants2:incense_cedar_stairs")
#cedarStairN.setProperty("facing", "north")
#cedarStairS = forBlock("plants2:incense_cedar_stairs")
#cedarStairS.setProperty("facing", "south")
#cedarStairE = forBlock("plants2:incense_cedar_stairs")
#cedarStairE.setProperty("facing", "east")
#cedarStairW = forBlock("plants2:incense_cedar_stairs")
#cedarStairW.setProperty("facing", "west")
#cedar.registerGenVillageBlockRep(oakStairN, cedarStairN)
#cedar.registerGenVillageBlockRep(oakStairS, cedarStairS)
#cedar.registerGenVillageBlockRep(oakStairE, cedarStairE)
#cedar.registerGenVillageBlockRep(oakStairW, cedarStairW)
#cedar.registerGenVillageBlockRep("minecraft:log", cedarLog)
#cedar.registerGenVillageBlockRep("minecraft:planks", cedarPlank)
#cedar.registerGenVillageBlockRep("minecraft:fence", "plants2:incense_cedar_fence")
#cedar.registerGenVillageBlockRep("minecraft:wooden_door", "biomesoplenty:cedar_door_block")
































